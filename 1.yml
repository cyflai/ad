---
- hosts: dc
  tasks:
  
   
  - set_fact:
      iso_path: "{{ ansible_env.TEMP }}\\SQLServer2017-x64-ENU.iso"
      config_file: "{{ ansible_env.TEMP }}\\config.ini"

  - debug:
      msg: "{{ ansible_env.TEMP }}"

  - win_stat:
      path: "{{ iso_path }}" 
      get_checksum: yes
      checksum_algorithm: md5
    register: sql_iso

  - name: Download ISO to TEMP
    win_get_url:
      url: https://gitlab.hds-cloudconnect.com:8443/SQLServer2017-x64-ENU.iso
      dest: "{{ iso_path }}"
      force: yes
    when: 
     - (sql_iso.stat.exists == false ) or (sql_iso.stat.checksum != "334fc5f8fdd269fb2d6d5dc1fd61d1c7")

  - name: Mount ISO
    win_disk_image:
      image_path: "{{ iso_path }}"
    register: disk_image_result

  - debug:
      msg: "{{ disk_image_result.mount_path }}"

  - name: Create a SQL Configure file config.ini
    win_template:
      src: templates/config.j2
      dest: "{{ config_file }}"

  - name: Create User AGTSVCACCOUNT
    win_domain_user:
      name: "{{ AGTSVCACCOUNT }}"
      firstname: "{{ AGTSVCACCOUNT }}"
      surname: "{{ AGTSVCACCOUNT }}"
      password: "{{ AGTSVCPASSWORD }}"
      upn: "{{ AGTSVCACCOUNT }}@{{ domain_name }}"
      state: present
    delegate_to: "{{ hostvars[groups['pdc'][0]]['inventory_hostname'] }}"

  - name: Create User SQLSVCACCOUNT
    win_domain_user:
      name: "{{ SQLSVCACCOUNT }}"
      firstname: "{{ SQLSVCACCOUNT }}"
      surname: "{{ SQLSVCACCOUNT }}"
      password: "{{ SQLSVCPASSWORD }}"
      upn: "{{ SQLSVCACCOUNT }}@{{ domain_name }}"
      state: present
    delegate_to: "{{ hostvars[groups['pdc'][0]]['inventory_hostname'] }}"

  - win_shell: "{{ disk_image_result.mount_path }}setup.exe /CONFIGURATIONFILE={{ config_file }}"
